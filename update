#!/usr/bin/env python
import sys
import os
import subprocess
from subprocess import Popen, check_call, CalledProcessError, PIPE

HASHDIST_COMMIT = '56be62da900e81413c3f961f507089461e751e5a'

# Rest of builder assume the python-hpcmp dir is the cwd
os.chdir(os.path.dirname(__file__))

# If HASHDIST is set, we are in development mode and we use the Hashdist provided.
# Otherwise, fetch the correct hashdist into the 'hashdist' subfolder

def fetch_hashdist(hashdist_path):
    if os.path.exists(hashdist_path):
        p = Popen(['git', 'rev-parse', 'HEAD'], cwd=hashdist_path, stdout=PIPE)
        out, err = p.communicate()
        if p.wait() != 0:
            raise CalledProcessError("git rev-parse did not work")
        if out.strip() != HASHDIST_COMMIT:
            sys.stderr.write('Need to update Hashdist...\n')
            # fetch correct version
            subprocess.check_call(['git', 'checkout', 'master'], cwd=hashdist_path)
            subprocess.check_call(['git', 'pull', 'origin', 'master'], cwd=hashdist_path)
            try:
                subprocess.check_call(['git', 'branch', '-D', 'auto'], cwd=hashdist_path,
                                      stderr=PIPE)
            except subprocess.CalledProcessError:
                pass
            subprocess.check_call(['git', 'checkout', '-b', 'auto', HASHDIST_COMMIT], cwd=hashdist_path)
    else:
        sys.stderr.write("Need to fetch Hashdist...\n")
        subprocess.check_call(['git', 'clone', 'git://github.com/hashdist/hashdist.git', hashdist_path])
        subprocess.check_call(['git', 'checkout', '-b', 'auto', HASHDIST_COMMIT], cwd=hashdist_path)
    
hashdist_path = os.environ.get('HASHDIST', None)
if hashdist_path is None:
    hashdist_path = os.path.realpath('_hashdist')
    fetch_hashdist(hashdist_path)
sys.path.insert(0, hashdist_path)

from builder import main
main()
